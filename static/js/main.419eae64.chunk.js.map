{"version":3,"sources":["Components/Header/Header.js","Components/Main/Main.js","Components/Display/Display.js","Components/NumberPad/NumberPad.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","Main","children","Display","result","displayVal","NumberPad","value","onClick","e","handleNumberInput","target","handleOpInput","resetCalc","handleEqualInput","App","state","op","numOne","numTwo","setState","console","log","slice","length","num1","parseInt","num2","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.419eae64.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header(props) {\n  return (\n    <header className='jumbotron text-center'>\n    <h1> React Calculator </h1>\n    </header>\n  );\n}\n\nexport default Header\n","import React from 'react';\nimport './Main.css';\n\nfunction Main(props) {\n  return (\n    <main className='container'>\n      <div className='row no-gutters'>\n        <div className='col-md-6 col-lg-4 m-sm-auto'>{props.children[0]}</div>\n      </div>\n      <div className='row'>\n        <div className='col-md-6 col-lg-3 m-sm-auto'>{props.children[1]}</div>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Display(props) {\n  return (\n    <p className='bg-secondary text-white px-3 rounded-pill'>\n      <span>{props.result ? props.result : props.displayVal}</span>\n    </p>\n  );\n}\n\nexport default Display;\n","import React from 'react'\n\nfunction NumberPad(props) {\n\n  return (\n    <div className='row'>\n      <button\n        value='7'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        7\n      </button>\n      <button\n        value='8'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        8\n      </button>\n      <button\n        value='9'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        9\n      </button>\n      <button\n        value='x'\n        className='col button btn-danger p-3 border-secondary items'\n        onClick={e => props.handleOpInput(e.target.value)}\n      >\n        x\n      </button>\n      <div className='w-100'></div>\n      <button\n        value='4'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        4\n      </button>\n      <button\n        value='5'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        5\n      </button>\n      <button\n        value='6'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        6\n      </button>\n      <button\n        value='+'\n        className='col button btn-danger p-3 border-secondary items'\n        onClick={e => props.handleOpInput(e.target.value)}\n      >\n        +\n      </button>\n      <div className='w-100'></div>\n      <button\n        value='1'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        1\n      </button>\n      <button\n        value='2'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        2\n      </button>\n      <button\n        value='3'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        3\n      </button>\n      <button\n        value='-'\n        className='col button btn-danger p-3 border-secondary items'\n        onClick={e => props.handleOpInput(e.target.value)}\n      >\n        -\n      </button>\n      <div className='w-100'></div>\n      <button\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.resetCalc()}\n      >\n        C\n      </button>\n      <button\n        value='0'\n        className='col button btn-info p-3 border-secondary items'\n        onClick={e => props.handleNumberInput(e.target.value)}\n      >\n        0\n      </button>\n      <button\n        className='col button btn-success p-3 border-secondary items'\n        onClick={e => props.handleEqualInput()}\n      >\n        =\n      </button>\n      <button\n        value='/'\n        className='col button btn-danger p-3 border-secondary items'\n        onClick={e => props.handleOpInput(e.target.value)}\n      >\n        /\n      </button>\n    </div>\n  )\n}\n\nexport default NumberPad","import React, {Component} from 'react'\nimport Header from './Components/Header'\nimport Main from './Components/Main'\nimport Display from './Components/Display'\nimport NumberPad from './Components/NumberPad'\n\nclass App extends Component {\n  state = {\n    op: '',\n    numOne: '',\n    numTwo: '',\n    result: '',\n    displayVal: 0\n  };\n\n  resetCalc = () => {\n    this.setState({\n      op: '',\n      numOne: '',\n      numTwo: '',\n      result: '',\n      displayVal: 0\n    });\n  };\n\n  handleNumberInput = value => {\n    if (!(this.state.numOne === '' && value === '0')) {\n      if (!this.state.op) {\n        console.log(this.state.numOne);\n        this.setState({\n          numOne: this.state.numOne + value,\n          displayVal: this.state.numOne + value\n        });\n      } else\n        this.setState({\n          numTwo: this.state.numTwo + value,\n          displayVal: `${this.state.numOne} ${this.state.op} ${this.state.numTwo + value}`\n        });\n    }\n  };\n\n  handleOpInput = value => {\n    if (this.state.numOne && !this.state.numTwo) {\n      if (!this.state.op)\n        this.setState({\n          op: value,\n          displayVal: this.state.displayVal + ' ' + value\n        });\n      else\n        this.setState({\n          op: value,\n          displayVal:\n            this.state.displayVal.slice(0, this.state.displayVal.length - 1) + value\n        });\n    }\n  };\n\n  handleEqualInput = () => {\n    if (this.state.numOne && this.state.numTwo) {\n      let num1 = parseInt(this.state.numOne);\n      let num2 = parseInt(this.state.numTwo);\n      switch (this.state.op) {\n        case '+':\n          this.setState({ result: num1 + num2 });\n          break;\n        case '-':\n          this.setState({ result: num1 - num2 });\n          break;\n        case 'x':\n          this.setState({ result: num1 * num2 });\n          break;\n        case '/':\n          this.setState({ result: num1 / num2 });\n          break;\n      }\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Main>\n          <Display result={this.state.result} displayVal={this.state.displayVal} />\n          <NumberPad\n            handleNumberInput={this.handleNumberInput}\n            handleOpInput={this.handleOpInput}\n            handleEqualInput={this.handleEqualInput}\n            resetCalc={this.resetCalc}\n          />\n        </Main>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}